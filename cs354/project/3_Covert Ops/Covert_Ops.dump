
Covert_Ops:	file format ELF32-i386

Disassembly of section .init:
_init:
    1000:	f3 0f 1e fb 	endbr32
    1004:	53 	pushl	%ebx
    1005:	83 ec 08 	subl	$8, %esp
    1008:	e8 03 01 00 00 	calll	259 <__x86.get_pc_thunk.bx>
    100d:	81 c3 c3 2f 00 00 	addl	$12227, %ebx
    1013:	8b 83 24 00 00 00 	movl	36(%ebx), %eax
    1019:	85 c0 	testl	%eax, %eax
    101b:	74 02 	je	2 <_init+0x1f>
    101d:	ff d0 	calll	*%eax
    101f:	83 c4 08 	addl	$8, %esp
    1022:	5b 	popl	%ebx
    1023:	c3 	retl
Disassembly of section .plt:
.plt:
    1030:	ff b3 04 00 00 00 	pushl	4(%ebx)
    1036:	ff a3 08 00 00 00 	jmpl	*8(%ebx)
    103c:	0f 1f 40 00 	nopl	(%eax)
    1040:	f3 0f 1e fb 	endbr32
    1044:	68 00 00 00 00 	pushl	$0
    1049:	e9 e2 ff ff ff 	jmp	-30 <.plt>
    104e:	66 90 	nop
    1050:	f3 0f 1e fb 	endbr32
    1054:	68 08 00 00 00 	pushl	$8
    1059:	e9 d2 ff ff ff 	jmp	-46 <.plt>
    105e:	66 90 	nop
    1060:	f3 0f 1e fb 	endbr32
    1064:	68 10 00 00 00 	pushl	$16
    1069:	e9 c2 ff ff ff 	jmp	-62 <.plt>
    106e:	66 90 	nop
    1070:	f3 0f 1e fb 	endbr32
    1074:	68 18 00 00 00 	pushl	$24
    1079:	e9 b2 ff ff ff 	jmp	-78 <.plt>
    107e:	66 90 	nop
Disassembly of section .plt.got:
.plt.got:
    1080:	f3 0f 1e fb 	endbr32
    1084:	ff a3 20 00 00 00 	jmpl	*32(%ebx)
    108a:	66 0f 1f 44 00 00 	nopw	(%eax,%eax)
Disassembly of section .plt.sec:
.plt.sec:
    1090:	f3 0f 1e fb 	endbr32
    1094:	ff a3 0c 00 00 00 	jmpl	*12(%ebx)
    109a:	66 0f 1f 44 00 00 	nopw	(%eax,%eax)
    10a0:	f3 0f 1e fb 	endbr32
    10a4:	ff a3 10 00 00 00 	jmpl	*16(%ebx)
    10aa:	66 0f 1f 44 00 00 	nopw	(%eax,%eax)
    10b0:	f3 0f 1e fb 	endbr32
    10b4:	ff a3 14 00 00 00 	jmpl	*20(%ebx)
    10ba:	66 0f 1f 44 00 00 	nopw	(%eax,%eax)
    10c0:	f3 0f 1e fb 	endbr32
    10c4:	ff a3 18 00 00 00 	jmpl	*24(%ebx)
    10ca:	66 0f 1f 44 00 00 	nopw	(%eax,%eax)
Disassembly of section .text:
_start:
    10d0:	f3 0f 1e fb 	endbr32
    10d4:	31 ed 	xorl	%ebp, %ebp
    10d6:	5e 	popl	%esi
    10d7:	89 e1 	movl	%esp, %ecx
    10d9:	83 e4 f0 	andl	$-16, %esp
    10dc:	50 	pushl	%eax
    10dd:	54 	pushl	%esp
    10de:	52 	pushl	%edx
    10df:	e8 22 00 00 00 	calll	34 <_start+0x36>
    10e4:	81 c3 ec 2e 00 00 	addl	$12012, %ebx
    10ea:	8d 83 80 d5 ff ff 	leal	-10880(%ebx), %eax
    10f0:	50 	pushl	%eax
    10f1:	8d 83 10 d5 ff ff 	leal	-10992(%ebx), %eax
    10f7:	50 	pushl	%eax
    10f8:	51 	pushl	%ecx
    10f9:	56 	pushl	%esi
    10fa:	ff b3 28 00 00 00 	pushl	40(%ebx)
    1100:	e8 ab ff ff ff 	calll	-85 <.plt.sec+0x20>
    1105:	f4 	hlt
    1106:	8b 1c 24 	movl	(%esp), %ebx
    1109:	c3 	retl
    110a:	66 90 	nop
    110c:	66 90 	nop
    110e:	66 90 	nop

__x86.get_pc_thunk.bx:
    1110:	8b 1c 24 	movl	(%esp), %ebx
    1113:	c3 	retl
    1114:	66 90 	nop
    1116:	66 90 	nop
    1118:	66 90 	nop
    111a:	66 90 	nop
    111c:	66 90 	nop
    111e:	66 90 	nop

deregister_tm_clones:
    1120:	e8 e4 00 00 00 	calll	228 <__x86.get_pc_thunk.dx>
    1125:	81 c2 ab 2e 00 00 	addl	$11947, %edx
    112b:	8d 8a 38 00 00 00 	leal	56(%edx), %ecx
    1131:	8d 82 38 00 00 00 	leal	56(%edx), %eax
    1137:	39 c8 	cmpl	%ecx, %eax
    1139:	74 1d 	je	29 <deregister_tm_clones+0x38>
    113b:	8b 82 1c 00 00 00 	movl	28(%edx), %eax
    1141:	85 c0 	testl	%eax, %eax
    1143:	74 13 	je	19 <deregister_tm_clones+0x38>
    1145:	55 	pushl	%ebp
    1146:	89 e5 	movl	%esp, %ebp
    1148:	83 ec 14 	subl	$20, %esp
    114b:	51 	pushl	%ecx
    114c:	ff d0 	calll	*%eax
    114e:	83 c4 10 	addl	$16, %esp
    1151:	c9 	leave
    1152:	c3 	retl
    1153:	8d 74 26 00 	leal	(%esi,%eiz), %esi
    1157:	90 	nop
    1158:	c3 	retl
    1159:	8d b4 26 00 00 00 00 	leal	(%esi,%eiz), %esi

register_tm_clones:
    1160:	e8 a4 00 00 00 	calll	164 <__x86.get_pc_thunk.dx>
    1165:	81 c2 6b 2e 00 00 	addl	$11883, %edx
    116b:	55 	pushl	%ebp
    116c:	89 e5 	movl	%esp, %ebp
    116e:	53 	pushl	%ebx
    116f:	8d 8a 38 00 00 00 	leal	56(%edx), %ecx
    1175:	8d 82 38 00 00 00 	leal	56(%edx), %eax
    117b:	83 ec 04 	subl	$4, %esp
    117e:	29 c8 	subl	%ecx, %eax
    1180:	89 c3 	movl	%eax, %ebx
    1182:	c1 e8 1f 	shrl	$31, %eax
    1185:	c1 fb 02 	sarl	$2, %ebx
    1188:	01 d8 	addl	%ebx, %eax
    118a:	d1 f8 	sarl	%eax
    118c:	74 14 	je	20 <register_tm_clones+0x42>
    118e:	8b 92 2c 00 00 00 	movl	44(%edx), %edx
    1194:	85 d2 	testl	%edx, %edx
    1196:	74 0a 	je	10 <register_tm_clones+0x42>
    1198:	83 ec 08 	subl	$8, %esp
    119b:	50 	pushl	%eax
    119c:	51 	pushl	%ecx
    119d:	ff d2 	calll	*%edx
    119f:	83 c4 10 	addl	$16, %esp
    11a2:	8b 5d fc 	movl	-4(%ebp), %ebx
    11a5:	c9 	leave
    11a6:	c3 	retl
    11a7:	8d b4 26 00 00 00 00 	leal	(%esi,%eiz), %esi
    11ae:	66 90 	nop

__do_global_dtors_aux:
    11b0:	f3 0f 1e fb 	endbr32
    11b4:	55 	pushl	%ebp
    11b5:	89 e5 	movl	%esp, %ebp
    11b7:	53 	pushl	%ebx
    11b8:	e8 53 ff ff ff 	calll	-173 <__x86.get_pc_thunk.bx>
    11bd:	81 c3 13 2e 00 00 	addl	$11795, %ebx
    11c3:	83 ec 04 	subl	$4, %esp
    11c6:	80 bb 38 00 00 00 00 	cmpb	$0, 56(%ebx)
    11cd:	75 27 	jne	39 <__do_global_dtors_aux+0x46>
    11cf:	8b 83 20 00 00 00 	movl	32(%ebx), %eax
    11d5:	85 c0 	testl	%eax, %eax
    11d7:	74 11 	je	17 <__do_global_dtors_aux+0x3a>
    11d9:	83 ec 0c 	subl	$12, %esp
    11dc:	ff b3 34 00 00 00 	pushl	52(%ebx)
    11e2:	e8 99 fe ff ff 	calll	-359 <.plt.got>
    11e7:	83 c4 10 	addl	$16, %esp
    11ea:	e8 31 ff ff ff 	calll	-207 <deregister_tm_clones>
    11ef:	c6 83 38 00 00 00 01 	movb	$1, 56(%ebx)
    11f6:	8b 5d fc 	movl	-4(%ebp), %ebx
    11f9:	c9 	leave
    11fa:	c3 	retl
    11fb:	8d 74 26 00 	leal	(%esi,%eiz), %esi
    11ff:	90 	nop

frame_dummy:
    1200:	f3 0f 1e fb 	endbr32
    1204:	e9 57 ff ff ff 	jmp	-169 <register_tm_clones>

__x86.get_pc_thunk.dx:
    1209:	8b 14 24 	movl	(%esp), %edx
    120c:	c3 	retl

Is_Number_Correct:
    120d:	f3 0f 1e fb 	endbr32
    1211:	55 	pushl	%ebp
    1212:	89 e5 	movl	%esp, %ebp
    1214:	83 ec 08 	subl	$8, %esp
    1217:	8b 45 08 	movl	8(%ebp), %eax
    121a:	3b 45 0c 	cmpl	12(%ebp), %eax
    121d:	75 1a 	jne	26 <Is_Number_Correct+0x2c>
    121f:	83 ec 08 	subl	$8, %esp
    1222:	ff 75 10 	pushl	16(%ebp)
    1225:	68 08 20 00 00 	pushl	$8200
    122a:	e8 fc ff ff ff 	calll	-4 <Is_Number_Correct+0x1e>
    122f:	83 c4 10 	addl	$16, %esp
    1232:	b8 01 00 00 00 	movl	$1, %eax
    1237:	eb 18 	jmp	24 <Is_Number_Correct+0x44>
    1239:	83 ec 08 	subl	$8, %esp
    123c:	ff 75 10 	pushl	16(%ebp)
    123f:	68 27 20 00 00 	pushl	$8231
    1244:	e8 fc ff ff ff 	calll	-4 <Is_Number_Correct+0x38>
    1249:	83 c4 10 	addl	$16, %esp
    124c:	b8 00 00 00 00 	movl	$0, %eax
    1251:	c9 	leave
    1252:	c3 	retl

f0:
    1253:	f3 0f 1e fb 	endbr32
    1257:	55 	pushl	%ebp
    1258:	89 e5 	movl	%esp, %ebp
    125a:	b8 0c 4a 55 00 	movl	$5589516, %eax
    125f:	5d 	popl	%ebp
    1260:	c3 	retl

f1:
    1261:	f3 0f 1e fb 	endbr32
    1265:	55 	pushl	%ebp
    1266:	89 e5 	movl	%esp, %ebp
    1268:	83 ec 20 	subl	$32, %esp
    126b:	c7 45 fc c3 61 00 00 	movl	$25027, -4(%ebp)
    1272:	c7 45 f8 82 c8 00 00 	movl	$51330, -8(%ebp)
    1279:	c7 45 f4 dc 07 01 00 	movl	$67548, -12(%ebp)
    1280:	c7 45 f0 c4 76 00 00 	movl	$30404, -16(%ebp)
    1287:	c7 45 ec 31 00 00 00 	movl	$49, -20(%ebp)
    128e:	c7 45 e8 11 00 00 00 	movl	$17, -24(%ebp)
    1295:	8b 55 f8 	movl	-8(%ebp), %edx
    1298:	8b 45 f4 	movl	-12(%ebp), %eax
    129b:	01 d0 	addl	%edx, %eax
    129d:	39 45 fc 	cmpl	%eax, -4(%ebp)
    12a0:	7e 09 	jle	9 <f1+0x4a>
    12a2:	c1 7d fc 04 	sarl	$4, -4(%ebp)
    12a6:	8b 45 fc 	movl	-4(%ebp), %eax
    12a9:	eb 28 	jmp	40 <f1+0x72>
    12ab:	8b 45 fc 	movl	-4(%ebp), %eax
    12ae:	0f af 45 f8 	imull	-8(%ebp), %eax
    12b2:	39 45 f0 	cmpl	%eax, -16(%ebp)
    12b5:	7d 0f 	jge	15 <f1+0x65>
    12b7:	8b 45 f4 	movl	-12(%ebp), %eax
    12ba:	99 	cltd
    12bb:	f7 7d ec 	idivl	-20(%ebp)
    12be:	89 55 f4 	movl	%edx, -12(%ebp)
    12c1:	8b 45 f4 	movl	-12(%ebp), %eax
    12c4:	eb 0d 	jmp	13 <f1+0x72>
    12c6:	8b 45 f0 	movl	-16(%ebp), %eax
    12c9:	99 	cltd
    12ca:	f7 7d e8 	idivl	-24(%ebp)
    12cd:	89 45 f0 	movl	%eax, -16(%ebp)
    12d0:	8b 45 f0 	movl	-16(%ebp), %eax
    12d3:	c9 	leave
    12d4:	c3 	retl

f2:
    12d5:	f3 0f 1e fb 	endbr32
    12d9:	55 	pushl	%ebp
    12da:	89 e5 	movl	%esp, %ebp
    12dc:	83 ec 10 	subl	$16, %esp
    12df:	c7 45 fc 00 00 00 00 	movl	$0, -4(%ebp)
    12e6:	c7 45 f8 00 00 00 00 	movl	$0, -8(%ebp)
    12ed:	eb 14 	jmp	20 <f2+0x2e>
    12ef:	8b 45 fc 	movl	-4(%ebp), %eax
    12f2:	0f af c0 	imull	%eax, %eax
    12f5:	89 c2 	movl	%eax, %edx
    12f7:	8b 45 08 	movl	8(%ebp), %eax
    12fa:	01 d0 	addl	%edx, %eax
    12fc:	01 45 f8 	addl	%eax, -8(%ebp)
    12ff:	83 45 fc 01 	addl	$1, -4(%ebp)
    1303:	83 7d fc 1b 	cmpl	$27, -4(%ebp)
    1307:	7e e6 	jle	-26 <f2+0x1a>
    1309:	8b 45 f8 	movl	-8(%ebp), %eax
    130c:	c9 	leave
    130d:	c3 	retl

f3_helper:
    130e:	f3 0f 1e fb 	endbr32
    1312:	55 	pushl	%ebp
    1313:	89 e5 	movl	%esp, %ebp
    1315:	83 ec 10 	subl	$16, %esp
    1318:	c7 45 fc 03 00 00 00 	movl	$3, -4(%ebp)
    131f:	8b 45 08 	movl	8(%ebp), %eax
    1322:	8b 10 	movl	(%eax), %edx
    1324:	8b 45 fc 	movl	-4(%ebp), %eax
    1327:	01 c2 	addl	%eax, %edx
    1329:	8b 45 08 	movl	8(%ebp), %eax
    132c:	89 10 	movl	%edx, (%eax)
    132e:	90 	nop
    132f:	c9 	leave
    1330:	c3 	retl

f3:
    1331:	f3 0f 1e fb 	endbr32
    1335:	55 	pushl	%ebp
    1336:	89 e5 	movl	%esp, %ebp
    1338:	8d 45 08 	leal	8(%ebp), %eax
    133b:	50 	pushl	%eax
    133c:	e8 cd ff ff ff 	calll	-51 <f3_helper>
    1341:	83 c4 04 	addl	$4, %esp
    1344:	8d 45 08 	leal	8(%ebp), %eax
    1347:	50 	pushl	%eax
    1348:	e8 c1 ff ff ff 	calll	-63 <f3_helper>
    134d:	83 c4 04 	addl	$4, %esp
    1350:	8b 45 0c 	movl	12(%ebp), %eax
    1353:	8b 00 	movl	(%eax), %eax
    1355:	8b 55 08 	movl	8(%ebp), %edx
    1358:	c1 e2 03 	shll	$3, %edx
    135b:	01 c2 	addl	%eax, %edx
    135d:	8b 45 0c 	movl	12(%ebp), %eax
    1360:	89 10 	movl	%edx, (%eax)
    1362:	90 	nop
    1363:	c9 	leave
    1364:	c3 	retl

main:
    1365:	f3 0f 1e fb 	endbr32
    1369:	8d 4c 24 04 	leal	4(%esp), %ecx
    136d:	83 e4 f0 	andl	$-16, %esp
    1370:	ff 71 fc 	pushl	-4(%ecx)
    1373:	55 	pushl	%ebp
    1374:	89 e5 	movl	%esp, %ebp
    1376:	53 	pushl	%ebx
    1377:	51 	pushl	%ecx
    1378:	83 ec 30 	subl	$48, %esp
    137b:	c7 45 f0 00 00 00 00 	movl	$0, -16(%ebp)
    1382:	83 ec 0c 	subl	$12, %esp
    1385:	68 3d 20 00 00 	pushl	$8253
    138a:	e8 fc ff ff ff 	calll	-4 <main+0x26>
    138f:	83 c4 10 	addl	$16, %esp
    1392:	c7 45 f4 00 00 00 00 	movl	$0, -12(%ebp)
    1399:	eb 20 	jmp	32 <main+0x56>
    139b:	8d 45 e0 	leal	-32(%ebp), %eax
    139e:	8b 55 f4 	movl	-12(%ebp), %edx
    13a1:	c1 e2 02 	shll	$2, %edx
    13a4:	01 d0 	addl	%edx, %eax
    13a6:	83 ec 08 	subl	$8, %esp
    13a9:	50 	pushl	%eax
    13aa:	68 52 20 00 00 	pushl	$8274
    13af:	e8 fc ff ff ff 	calll	-4 <main+0x4b>
    13b4:	83 c4 10 	addl	$16, %esp
    13b7:	83 45 f4 01 	addl	$1, -12(%ebp)
    13bb:	83 7d f4 03 	cmpl	$3, -12(%ebp)
    13bf:	7e da 	jle	-38 <main+0x36>
    13c1:	8b 5d ec 	movl	-20(%ebp), %ebx
    13c4:	8b 4d e8 	movl	-24(%ebp), %ecx
    13c7:	8b 55 e4 	movl	-28(%ebp), %edx
    13ca:	8b 45 e0 	movl	-32(%ebp), %eax
    13cd:	83 ec 0c 	subl	$12, %esp
    13d0:	53 	pushl	%ebx
    13d1:	51 	pushl	%ecx
    13d2:	52 	pushl	%edx
    13d3:	50 	pushl	%eax
    13d4:	68 58 20 00 00 	pushl	$8280
    13d9:	e8 fc ff ff ff 	calll	-4 <main+0x75>
    13de:	83 c4 20 	addl	$32, %esp
    13e1:	e8 6d fe ff ff 	calll	-403 <f0>
    13e6:	89 45 d0 	movl	%eax, -48(%ebp)
    13e9:	e8 73 fe ff ff 	calll	-397 <f1>
    13ee:	89 45 d4 	movl	%eax, -44(%ebp)
    13f1:	83 ec 0c 	subl	$12, %esp
    13f4:	ff 75 f4 	pushl	-12(%ebp)
    13f7:	e8 d9 fe ff ff 	calll	-295 <f2>
    13fc:	83 c4 10 	addl	$16, %esp
    13ff:	89 45 d8 	movl	%eax, -40(%ebp)
    1402:	c7 45 dc ce 0f 00 00 	movl	$4046, -36(%ebp)
    1409:	8b 45 dc 	movl	-36(%ebp), %eax
    140c:	83 ec 08 	subl	$8, %esp
    140f:	8d 55 d0 	leal	-48(%ebp), %edx
    1412:	83 c2 0c 	addl	$12, %edx
    1415:	52 	pushl	%edx
    1416:	50 	pushl	%eax
    1417:	e8 15 ff ff ff 	calll	-235 <f3>
    141c:	83 c4 10 	addl	$16, %esp
    141f:	8b 55 d0 	movl	-48(%ebp), %edx
    1422:	8b 45 e0 	movl	-32(%ebp), %eax
    1425:	83 ec 04 	subl	$4, %esp
    1428:	6a 00 	pushl	$0
    142a:	52 	pushl	%edx
    142b:	50 	pushl	%eax
    142c:	e8 dc fd ff ff 	calll	-548 <Is_Number_Correct>
    1431:	83 c4 10 	addl	$16, %esp
    1434:	01 45 f0 	addl	%eax, -16(%ebp)
    1437:	8b 55 d4 	movl	-44(%ebp), %edx
    143a:	8b 45 e4 	movl	-28(%ebp), %eax
    143d:	83 ec 04 	subl	$4, %esp
    1440:	6a 01 	pushl	$1
    1442:	52 	pushl	%edx
    1443:	50 	pushl	%eax
    1444:	e8 c4 fd ff ff 	calll	-572 <Is_Number_Correct>
    1449:	83 c4 10 	addl	$16, %esp
    144c:	01 45 f0 	addl	%eax, -16(%ebp)
    144f:	8b 55 d8 	movl	-40(%ebp), %edx
    1452:	8b 45 e8 	movl	-24(%ebp), %eax
    1455:	83 ec 04 	subl	$4, %esp
    1458:	6a 02 	pushl	$2
    145a:	52 	pushl	%edx
    145b:	50 	pushl	%eax
    145c:	e8 ac fd ff ff 	calll	-596 <Is_Number_Correct>
    1461:	83 c4 10 	addl	$16, %esp
    1464:	01 45 f0 	addl	%eax, -16(%ebp)
    1467:	8b 55 dc 	movl	-36(%ebp), %edx
    146a:	8b 45 ec 	movl	-20(%ebp), %eax
    146d:	83 ec 04 	subl	$4, %esp
    1470:	6a 03 	pushl	$3
    1472:	52 	pushl	%edx
    1473:	50 	pushl	%eax
    1474:	e8 94 fd ff ff 	calll	-620 <Is_Number_Correct>
    1479:	83 c4 10 	addl	$16, %esp
    147c:	01 45 f0 	addl	%eax, -16(%ebp)
    147f:	83 7d f0 00 	cmpl	$0, -16(%ebp)
    1483:	75 10 	jne	16 <main+0x130>
    1485:	83 ec 0c 	subl	$12, %esp
    1488:	68 7c 20 00 00 	pushl	$8316
    148d:	e8 fc ff ff ff 	calll	-4 <main+0x129>
    1492:	83 c4 10 	addl	$16, %esp
    1495:	83 7d f0 00 	cmpl	$0, -16(%ebp)
    1499:	7e 19 	jle	25 <main+0x14f>
    149b:	83 7d f0 03 	cmpl	$3, -16(%ebp)
    149f:	7f 13 	jg	19 <main+0x14f>
    14a1:	83 ec 08 	subl	$8, %esp
    14a4:	ff 75 f0 	pushl	-16(%ebp)
    14a7:	68 b4 20 00 00 	pushl	$8372
    14ac:	e8 fc ff ff ff 	calll	-4 <main+0x148>
    14b1:	83 c4 10 	addl	$16, %esp
    14b4:	83 7d f0 04 	cmpl	$4, -16(%ebp)
    14b8:	75 10 	jne	16 <main+0x165>
    14ba:	83 ec 0c 	subl	$12, %esp
    14bd:	68 e4 20 00 00 	pushl	$8420
    14c2:	e8 fc ff ff ff 	calll	-4 <main+0x15e>
    14c7:	83 c4 10 	addl	$16, %esp
    14ca:	b8 00 00 00 00 	movl	$0, %eax
    14cf:	8d 65 f8 	leal	-8(%ebp), %esp
    14d2:	59 	popl	%ecx
    14d3:	5b 	popl	%ebx
    14d4:	5d 	popl	%ebp
    14d5:	8d 61 fc 	leal	-4(%ecx), %esp
    14d8:	c3 	retl
    14d9:	66 90 	nop
    14db:	66 90 	nop
    14dd:	66 90 	nop
    14df:	90 	nop

__libc_csu_init:
    14e0:	f3 0f 1e fb 	endbr32
    14e4:	55 	pushl	%ebp
    14e5:	e8 6b 00 00 00 	calll	107 <__x86.get_pc_thunk.bp>
    14ea:	81 c5 e6 2a 00 00 	addl	$10982, %ebp
    14f0:	57 	pushl	%edi
    14f1:	56 	pushl	%esi
    14f2:	53 	pushl	%ebx
    14f3:	83 ec 0c 	subl	$12, %esp
    14f6:	89 eb 	movl	%ebp, %ebx
    14f8:	8b 7c 24 28 	movl	40(%esp), %edi
    14fc:	e8 ff fa ff ff 	calll	-1281 <_init>
    1501:	8d 9d fc fe ff ff 	leal	-260(%ebp), %ebx
    1507:	8d 85 f8 fe ff ff 	leal	-264(%ebp), %eax
    150d:	29 c3 	subl	%eax, %ebx
    150f:	c1 fb 02 	sarl	$2, %ebx
    1512:	74 29 	je	41 <__libc_csu_init+0x5d>
    1514:	31 f6 	xorl	%esi, %esi
    1516:	8d b4 26 00 00 00 00 	leal	(%esi,%eiz), %esi
    151d:	8d 76 00 	leal	(%esi), %esi
    1520:	83 ec 04 	subl	$4, %esp
    1523:	57 	pushl	%edi
    1524:	ff 74 24 2c 	pushl	44(%esp)
    1528:	ff 74 24 2c 	pushl	44(%esp)
    152c:	ff 94 b5 f8 fe ff ff 	calll	*-264(%ebp,%esi,4)
    1533:	83 c6 01 	addl	$1, %esi
    1536:	83 c4 10 	addl	$16, %esp
    1539:	39 f3 	cmpl	%esi, %ebx
    153b:	75 e3 	jne	-29 <__libc_csu_init+0x40>
    153d:	83 c4 0c 	addl	$12, %esp
    1540:	5b 	popl	%ebx
    1541:	5e 	popl	%esi
    1542:	5f 	popl	%edi
    1543:	5d 	popl	%ebp
    1544:	c3 	retl
    1545:	8d b4 26 00 00 00 00 	leal	(%esi,%eiz), %esi
    154c:	8d 74 26 00 	leal	(%esi,%eiz), %esi

__libc_csu_fini:
    1550:	f3 0f 1e fb 	endbr32
    1554:	c3 	retl

__x86.get_pc_thunk.bp:
    1555:	8b 2c 24 	movl	(%esp), %ebp
    1558:	c3 	retl
Disassembly of section .fini:
_fini:
    155c:	f3 0f 1e fb 	endbr32
    1560:	53 	pushl	%ebx
    1561:	83 ec 08 	subl	$8, %esp
    1564:	e8 a7 fb ff ff 	calll	-1113 <__x86.get_pc_thunk.bx>
    1569:	81 c3 67 2a 00 00 	addl	$10855, %ebx
    156f:	83 c4 08 	addl	$8, %esp
    1572:	5b 	popl	%ebx
    1573:	c3 	retl
